{% extends "template.njk" %}

{% set htmlClasses = 'no-js' %}

{% block pageTitle %}{{ title }} â€“ GOV.UK Design System{% endblock %}

{% block head %}
  <meta name="robots" content="noindex, nofollow">

  <!--[if !IE 8]><!-->
    <link href="/{{ fingerprint['design-system/stylesheets/main.css'] }}" rel="stylesheet" media="all" />
  <!--<![endif]-->
  <!--[if lt IE 9]>
    <link href="/{{ fingerprint['design-system/stylesheets/main-ie8.css'] }}" rel="stylesheet" media="all" />
    <script src="/{{ fingerprint['design-system/javascripts/ie.js'] }}"></script>
  <![endif]-->
  <script src="/design-system/javascripts/vendor/modernizr.js"></script>
  {% include "_tracking-head.njk" %}
{% endblock %}

{# We provide our own header, so blank the one provided by the template #}
{% block header %}{% endblock %}

{% block main %}
<div class="app-pane {% block appPaneClasses %}{% endblock %}">
  {% include "_cookie-banner.njk" %}
  <div class="app-pane__header">
    {% include "_header.njk" %}
    {% include "_banner.njk" %}
  </div>
  <div class="app-pane__nav">
    {% include "_navigation.njk" %}
    {% include "_mobile-navigation.njk" %}
  </div>
  {% block body %}
    {{ contents | safe }}
  {% endblock %}
</div>
{% endblock %}

{# We provide our own footer, so blank the one provided by the template #}
{% block footer %}{% endblock %}

{% block bodyEnd %}
<script src="/{{ fingerprint['design-system/javascripts/application.js'] }}"></script>
<script src="/{{ fingerprint['design-system/javascripts/connection-status.js'] }}"></script>
<script>
    if ('serviceWorker' in navigator) {
      // initialise the offline status module
      window.addEventListener('load', () => {
        // Scope will be restricted to the path where the service-worker.js file is located
        navigator.serviceWorker.register('/service-worker.js', {scope: '/'}).then(registration => {
          console.log('Service Worker registered: ', registration)
          // on SW registration see what the connection status is
          ConnectionStatus.update()
        }).catch(registrationError => {
          console.log('Service Worker registration failed: ', registrationError)
        })
      })

      // trigger the connection state events
      window.addEventListener('online', ConnectionStatus.update)
      window.addEventListener('offline', ConnectionStatus.update)
    }
</script>
{% endblock %}
